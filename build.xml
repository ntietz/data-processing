
<project name="data-processing" default="compile" basedir=".">
    <description>
        A simple build file for Hadoop projects.
    </description>

    <property name="src" location="src/" />
    <property name="lib" location="lib/" />
    <property name="build" location="build/" />
    <property name="dist" location="dist/" />
    <property name="test" location="test/" />
    <property name="extern" location="extern/" />
    <property name="instrumented" location="instrumented/" />
    <property name="reports" location="reports/" />
    <property name="reports.test" location="reports/test/" />
    <property name="reports.cobertura" location="reports/cobertura/" />

    <path id="classpath.base">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${build}" />
        <pathelement location="${src}" />
    </path>

    <path id="classpath.test">
        <pathelement location="${instrumented}" />
        <pathelement location="${build}" />
        <pathelement location="${test}" />
        <pathelement location="${src}" />
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${extern}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="classpath.test" resource="tasks.properties" />

    <!-- target: init -->
    <target name="init"
        description="Sets up the initial structure.">

        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />

    </target>

    <!-- target: compile -->
    <target name="compile" depends="init"
        description="Compiles the project.">

        <javac srcdir="${src}" destdir="${build}" debug="on">
            <classpath refid="classpath.base" />
        </javac>

    </target>

    <!-- target: compile-tests -->
    <target name="compile-tests" depends="init,compile"
        description="Compiles the tests.">

        <javac srcdir="${test}" destdir="${build}" debug="on">
            <classpath refid="classpath.test" />
        </javac>

    </target>

    <!-- target: instrument -->
    <target name="instrument" depends="compile-tests"
        description="Instruments the classes to measure coverage.">

        <cobertura-instrument todir="${instrumented}"
            datafile="cobertura.ser">

            <!--<excludeClasses regex=".*\.Test.*" />-->

            <fileset dir="${build}">
                <include name="**/*.class"/>
                <exclude name="**/*Test.class"/>
            </fileset>
        </cobertura-instrument>

    </target>

    <!-- target: run-tests -->
    <target name="run-tests" depends="compile-tests,instrument"
        description="Run the tests.">

        <mkdir dir="${reports}" />
        <mkdir dir="${reports.test}" />
        <mkdir dir="${reports.cobertura}" />

        <junit printsummary="yes" failureProperty="test.failure">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                file="cobertura.ser" />

            <classpath refid="classpath.test" />
            <formatter type="plain" />
            <batchtest todir="${reports.test}">
                <fileset dir="${test}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>

        <fail message="Tests failed!" if="test.failure" />
    </target>

    <!-- target: coverage -->
    <target name="coverage"
        description="Generate coverage report.">

        <cobertura-report format="html" srcdir="${src}" destdir="${reports.cobertura}"/>
        <!--
        <cobertura-report datafile="cobertura.ser"
            format="html" destdir="${reports.cobertura}">

            <fileset dir="${src}">
                <include name="**/*.java" />
            </fileset>

        </cobertura-report>
        -->

    </target>

    <!-- target: javadoc -->
    <target name="javadoc"
        description="Generate the javadoc reports.">

        <mkdir dir="javadoc" />

        <javadoc destdir="javadoc/">
            <fileset dir="${src}" includes="**/*.java" />
        </javadoc>

    </target>

    <!-- target: jar -->
    <target name="jar" depends="init,compile"
        description="Jars the compiled project.">

        <jar destfile="${dist}/jobs.jar">
            <fileset dir="${build}" />
            <manifest>
                <attribute name="Main-Class"
                    value="com.treecitysoftware.common.CommonLauncher" />
            </manifest>
        </jar>

    </target>

    <!-- target: clean -->
    <target name="clean"
        description="Removes compiled files.">

        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="javadoc" />
        <delete dir="${instrumented}" />
        <delete file="cobertura.ser" />

    </target>

</project>

